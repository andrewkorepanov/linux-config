CMUS(1)                                                                           General Commands Manual                                                                          CMUS(1)

NNAAMMEE
       cmus - C* Music Player

SSYYNNOOPPSSIISS
       cmus [ooppttiioonnss]

DDEESSCCRRIIPPTTIIOONN
       cmus is a small ncurses based music player.  It supports various output methods by output-plugins. cmus has completely configurable keybindings and can be controlled from the
       outside via ccmmuuss--rreemmoottee(1).

OOPPTTIIOONNSS
       --listen ADDR
              Listen to ADDR (UNIX socket) instead of _$_C_M_U_S___S_O_C_K_E_T or _$_X_D_G___R_U_N_T_I_M_E___D_I_R_/_c_m_u_s_-_s_o_c_k_e_t. ADDR is either a UNIX socket or host[:port].

              WWAARRNNIINNGG: Using host[:port] is insecure even with password! It might be useful though in LAN if you want multiple local users to able to control cmus.  Never make cmus
              listen to the internet.

              NOTE: Don't use this option to run multiple instances as same user. That would corrupt the track metadata cache.

       --passwd PASSWD
              Set the password for TCP/IP connections.  Must be set if you are listening from host[:port].  Used in conjunction with --listen.

       --plugins
              List available plugins and exit.

       --show-cursor
              Keep cursor always visible.  This is useful for screen readers.

       --help
              Display usage information and exit.

       --version
              Display version information and exit.

VVIIEEWWSS
       There are 7 views in cmus.  Press keys 1-7 to change active view.

       Library view (1)
              Display all tracks in so-called lliibbrraarryy. Tracks are sorted artist/album tree.  Artist sorting is done alphabetically. Albums are sorted by year.

       Sorted library view (2)
              Displays same content as view 1, but as a simple list which is automatically sorted by user criteria.

       Playlist view (3)
              Displays editable playlists with optional sorting.

       Play Queue view (4)
              Displays queue of tracks which are played next. These tracks are played before anything else (i.e. the playlist or library).

       Browser (5)
              Directory browser.  In this view, music can be added to either the library, marked playlist or queue from the filesystem.

       Filters view (6)
              Lists user defined filters.

       Settings view (7)
              Lists keybindings, unbound commands and options.  Remove bindings with DD or ddeell, change bindings and variables with eenntteerr and toggle variables with ssppaaccee.

CCOOMMMMAANNDD LLIINNEE
       Everything in cmus is implemented as commands which can be typed at command line or bound to a key.  To enter command mode type ::.  To execute a command press EENNTTEERR or to cancel
       press EESSCC or CCTTRRLL--CC.  Use up/down arrows to browse command history.  Use TTAABB to complete commands and parameters, you can tab complete almost anything.  You don't need to type
       full command names if the command is unambiguous (no other commands starting with the same characters).

       Examples:

              # add files, short for ':add ~/music'
              :a ~/music

              # change output plugin
              :set output_plugin=oss

              # start playing
              # you could just press 'x' which is the default
              # binding for this command
              :player-play

              # clear current view (library, playlist or play queue)
              :clear

SSEEAARRCCHHIINNGG
       Search mode works like the command mode, to enter search mode press // and then type the search words and press EENNTTEERR.  Press nn to search next or NN to search previous match using
       the same search words.  Type ?? to search backwards.

       In views 1-4 words are compared to artist, album and title tags. Type ////WWOORRDDSS or ????WWOORRDDSS to search only artists/albums in view 1 or titles in views 2-4. If the file doesn't have
       tags words are compared to filename without path.

       Searching works in views 5-7 too and its logic should be pretty obvious.

PPLLAAYYLLIISSTT EEDDIITTIINNGG
   SSeelleeccttiinngg TTrraacckkss
       Editing commands affect the currently marked tracks or if there are no marked tracks the currently selected track (or selected artist/album in view 1).

       Mark selected track by pressing SSPPAACCEE.  Marked tracks appear with a gray background.  You can only mark tracks in the list views (2-4).

   CCooppyyiinngg TTrraacckkss BBeettwweeeenn VViieewwss
       You can copy marked or selected tracks from views 1-5.

       aa      copy tracks to the library (1-2)

       yy      copy tracks to the marked playlist (3)

       ee      append tracks to the play queue (4)

       EE      prepend tracks to the play queue (4)

   MMoovviinngg TTrraacckkss
       In views 2-4 you can move tracks within the list. Note that moving is disabled if the view is auto-sorted (see lliibb__ssoorrtt and ppll__ssoorrtt options).

       Pressing pp moves marked tracks to the position immediately after the selected track.  PP moves them to the position immediately before the selected track.  If there are no marked
       tracks then the selected track is moved down (pp) or up (PP).

       NOTE: Changing active filters reloads view 2 so it isn't a good idea to manually order tracks in the view.

   RReemmoovviinngg TTrraacckkss
       Press DD or ddeelleettee to remove marked or selected tracks in the current view (1-4).  The tracks will be removed immediately from the view without asking for confirmation.  In the
       browser and filters views the same keys are used to remove a file or filter (will ask for confirmation).

SSTTAATTUUSS LLIINNEE
       Right hand side of the status line (second row from the bottom, black text on a grey background) consists of the following fields:

       aaa_mode & play_sorted & play_library | continue follow repeat shuffle

       NOTE: aaaaaa__mmooddee and ppllaayy__ssoorrtteedd will be displayed only if ppllaayy__lliibbrraarryy is ttrruuee because these are meaningless when playing the playlists (view 3).

       Pressing mm, oo, MM, CC, rr and ss keys should make it easier to understand what all those fields mean.

       See CONFIGURATION OPTIONS section for more information about these options.

KKEEYYBBIINNDDIINNGGSS
       Here's list of default keybindings.  See uunnbbiinndd and bbiinndd commands in the COMMANDS section.

   CCoommmmoonn CCoonntteexxtt
       q                           quit -i
       ^C                          echo Type :quit<enter> to exit cmus.
       I                           echo {}
       b                           player-next
       c                           player-pause
       x                           player-play
       z                           player-prev
       v                           player-stop
       ^L                          refresh
       /                           search-start
       ?                           search-b-start
       n                           search-next
       N                           search-prev
       .                           seek +1m
       l, right                    seek +5
       ,                           seek -1m
       h, left                     seek -5
       m                           toggle aaa_mode
       C                           toggle continue
       M                           toggle play_library
       o                           toggle play_sorted
       r                           toggle repeat
       ^R                          toggle repeat_current
       t                           toggle show_remaining_time
       s                           toggle shuffle
       f                           toggle follow
       F                           push filter<space>
       L                           push live-filter<space>
       u                           update-cache
       1                           view tree
       2                           view sorted
       3                           view playlist
       4                           view queue
       5                           view browser
       6                           view filters
       7                           view settings
       !                           push shell<space>
       ]                           vol +0 +1
       [                           vol +1 +0
       +, =                        vol +10%
       }                           vol -0 -1
       {                           vol -1 -0
       -                           vol -10%
       enter, mlb_click_selected   win-activate
       E                           win-add-Q
       a                           win-add-l
       y                           win-add-p
       e                           win-add-q
       G, end                      win-bottom
       down, j, mouse_scroll_down  win-down
       p                           win-mv-after
       P                           win-mv-before
       tab                         win-next
       ^F, page_down               win-page-down
       ^B, page_up                 win-page-up
       ^E                          win-scroll-down
       ^Y                          win-scroll-up
       D, delete                   win-remove
       i                           win-sel-cur
       space                       win-toggle
       g, home                     win-top
       k, up, mouse_scroll_up      win-up

   BBrroowwsseerr CCoonntteexxtt
       space          win-activate
       backspace      browser-up
       i              toggle show_hidden
       u              win-update

LLIIBBRRAARRYY VVIIEEWW SSOORRTTIINNGG
       The library view (the tree-like one; not the sorted library view, for which the sorting is controlled by the user by setting lib_sort - see _C_O_N_F_I_G_U_R_A_T_I_O_N _O_P_T_I_O_N_S), is sorted
       automatically by cmus using the information found in the tagging information provided by the audio files.

       Generally, in the library view cmus uses three levels of sorting: the first level would be the artist name, the second one the album and finally the actual track.

       At first, cmus checks if the "filename" looks like an URL, if it does, the item is given the special artist and album name <<SSttrreeaamm>>.

       If it is a file, it is checked if the artist and album tags are set. If not, cmus assigns the special name <<NNoo NNaammee>> for the unset tag.

       As the first level, cmus sorts alphanumerically by the value of the artist tag. (<Stream> and <No Name> will be used as if they where normal names.) If a special sorting tag is
       available, it's value will be used instead.

       For album names, alphanumerical sorting is not the primary method, though. To decide, how the second level should be sorted, cmus looks at the date of the first track of each
       album. Sorting is done from young to old. Of course, if one artist happens to have more then one album from one year, alphanumerical sorting will be used after sorting by date.

       If the date header is not set, the album will be placed on top of the list (in fact, the internal integer value for unset album tags is -1).

       The method for third sorting level (the track) is very similar to album sorting. First two numerical values are checked (discnumber and tracknumber). If sorting is still
       ambiguous, sorting will be done alphanumerically by the value of the track's _f_i_l_e_n_a_m_e (not track name!).

       For simple albums, that is it. There is a special case, though. Albums, that feature various artists, also known as samplers or compilations.

       If a track belongs to a compilation is again decided by the existence and value of special tagging information. First, it is checked if cmus should use a special artist name
       (e.g.: _'_F_a_t_b_o_y _S_l_i_m_' for a DJ set). If so, that one will be used instead of the real artist name.

       If that special name tag is not set, cmus checks if another tag is set. If that is the case, the album will be given the special artist name <<VVaarriioouuss AArrttiissttss>>. Albums filed under
       <<VVaarriioouuss AArrttiissttss>> are sorted alphanumerically by album name instead of by date.

       That way, you do not end up with compilation tracks scattered around your library view.

       The problem with compilation tagging is, that there is no generic tag or method, that can be regarded as a standard across all different formats, supported by cmus.

       For mp3, the special-name tag would be the id3v2 TTPPEE22 frame. The mark-as-compilation tag is the TTCCMMPP frame (which is a user defined id3v2.3 frame, used at least by amarok and
       apple's iTunes[tm]).

       For vorbis style tags (for example in ogg vorbis and flac files), the special-name tag is AALLBBUUMMAARRTTIISSTT and the mark-as-compilation tag is CCOOMMPPIILLAATTIIOONN. Vorbis tags names are case
       insensitive.

CCOOMMMMAANNDDSS
       This section describes cmus' commands.  You can bind a key to any of these commands, put these commands to configuration files and execute them in command mode.  Also cmus-remote
       uses these commands in its protocol.

       Optional parameters are in brackets, obligatory parameters in angle brackets and default key bindings in parenthesis.

       add [-l] [-p] [-q] [-Q] <file|dir|url|playlist>
              Add file/dir/url/playlist to the specified view or the current view.

              -l     add to library

              -p     add to playlist

              -q     add play queue

              -Q     prepend to play queue

              URL is a Shoutcast stream (http://...) or a CDDA URL (cdda://...) (see PPLLAAYYIINNGG AAUUDDIIOO DDIISSCCSS).

              Supported playlist: plain, .m3u, .pls.

       bind [-f] <context> <key> <command>
              Add a key binding.

              -f     overwrite existing binding

              Use tab to expand contexts, keys and commands.  Command is any command listed in this section.

              Valid key contexts
                     common, library (1-2), playlist (3), queue (4), browser (5), filters (6)

              There's one context for each view.  Common is a special context on which bound keys work in every view.

              You can override specific keys in common context for a view.  For example ii selects the current track in views 1-3 but in browser it is overridden to toggle showing of
              hidden files.

       browser-up (bbaacckkssppaaccee)
              Change to parent directory in browser view (5). This command only makes sense to be bound to the bbrroowwsseerr key context although it's possible to use this even if browser view
              is not active.

       cd [directory]
              Changes the current working directory.  Changes the directory displayed in browser view too.

       clear [-l] [-p] [-q]
              Remove all tracks from the specified view or the current view.

              -l     clear library

              -p     clear playlist

              -q     clear play queue

       colorscheme <name>
              Change color scheme.  Color schemes are found in _/_u_s_r_/_s_h_a_r_e_/_c_m_u_s_/ or _$_X_D_G___C_O_N_F_I_G___H_O_M_E_/_c_m_u_s_/ and have .theme filename extension.

       echo <arg>...
              Display arguments on the command line.

              If the arguments contain {{}} it is replaced with file name of the first selected track.

              NOTE: unlike with rruunn the {{}} is replaced with only the first selected filename.

              Default bindings:

                     common  I   echo {}
                     common  ^C  echo Type :quit<enter> to exit cmus.

       factivate <user-defined-filter>...
              Select and activate the given user defined filters (displayed in the filters view).  Filter names are separated by spaces.  This command is mostly useful when bound to a
              key, to change active filters very quickly.  If no arguments given then all filters are unactivated.

              If you prefix a filter name with "!" then the filter value is negated before activation.

       filter <filter-expression>
              Use this command when you want to temporarily filter contents of the library views without having separately define (fset) and activate the filter.  The filter is not
              saved.

       fset <name>=<filter-expression>
              Define (or replace existing) filter and add it to filters view (6).

       invert
              Invert the marking of tracks in playlist and queue views. See mmaarrkk and uunnmmaarrkk.

       live-filter <simple-filter-expression|short-filter-expression>
              Use this command when you want to temporarily filter contents of the library views without having separately define (fset) and activate the filter.  The filter is not
              saved.

       load [-l] [-p] <playlist>
              Load a playlist to the specified view or to the current view.

              -l     load to library views

              -p     load to playlist view

       lqueue [NUM]
              Queue NUM (default 1) random albums from the library. See also ttqquueeuuee.

       mark <filter-expression>
              Mark tracks in playlist and queue view by using a filter expression.

       pl-create <name>
              Creates a new playlist.

       pl-export <filename>
              Exports the currently selected playlist.

       pl-import [filename]
              Imports a playlist into the playlist view. The argument can be omitted in the browser view.

       pl-rename <name>
              Renames the selected playlist.

       player-next (bb)
              Skip to the next track.

       player-pause (cc)
              Toggle pause.

       player-pause-playback
              Pause if currently playing.

       player-play [filename] (xx)
              Play the given track, or, if none is specified, [re]play the current track from the beginning.

       player-prev (zz)
              Skip to the previous track.

       player-stop (vv)
              Stop playback.

       prev-view
              Go to previously used view.

       left-view
              Go to view "to the left" of current one, e.g. view 4 -> view 3.

       right-view
              Go to view "to the right" of current one, e.g. view 3 -> view 4.

       push <text>
              Enter command mode with the command line pre-set to text. Example:

                     bind common w push filter artist=

              Text can contain spaces and even trailing spaces will be honored. This command can only be bound to a key but not used in the command line directly.

       pwd
              Prints the current working directory.

       quit [-i] (qq, ::wwqq)
              Exit cmus.

              -i     ask before exiting

       raise-vte
              Raise the virtual terminal emulator window.  Works only in X session.

       rand
              Randomizes (shuffles) the tracks in the library, playlist or queue view.

       refresh (^^LL)
              Redraw the terminal window.

       run <command>
              Run command for the marked tracks OR the selected one if none marked.

              By default file names are appended to the command.  If the command contains {{}} it is replaced with list of filenames.

              NOTE: In view 1 you can run a command for all files in the selected album or artist.

       save [-e]  [-l] [-L] [-p] [-q]  [file]  (::ww)
              Save the specified view's or the current view's contents to a playlist file. In extended mode (-e), also save metadata.

              -l     save library views

              -L     save filtered library views

              -p     save playlist view

              -q     save queue view

              If no filename given the old filename is used. "-" outputs to stdout (works only remotely).

       search-next (nn)
              If a search pattern has been entered before, search forward for the next match in the current view.  See SSEEAARRCCHHIINNGG above.

       search-prev (NN)
              If a search pattern has been entered before, search backwards for the previous match in the current view.  See SSEEAARRCCHHIINNGG above.

       seek [+-](<num>[mh] | [HH:]MM:SS)
              Seek to absolute or relative position.  Position can be given in seconds, minutes (m), hours (h) or HH:MM:SS format where HH: is optional.

              Seek 1 minute backward
                     :seek -1m

              Seek 5 seconds forward
                     :seek +5

              Seek to absolute position 1h
                     :seek 1h

              Seek 90 seconds forward
                     :seek +1:30

              Default bindings:

                     common  ,      :seek -1m
                     common  .      :seek +1m
                     common  l      :seek +5
                     common  h      :seek -5
                     common  right  :seek +5
                     common  left   :seek -5

       set <option>=<value>
              Set value of an option. See OOPPTTIIOONNSS.

       set <option>
              Display option value.  Vim compatible sseett <<ooppttiioonn>>?? is also supported.

       shell <command>
              Execute a command via /bin/sh.

       showbind <context> <key>
              Show key binding.

       shuffle
              Reshuffle the shuffle lists for both library and playlist views.

       source <filename>
              Read and execute commands from <filename>.

       toggle <option>
              Toggle value of a toggle-able option (all booleans and tristate aaaaaa__mmooddee).

       tqueue [NUM]
              Queue NUM (default 1) random tracks from the library. See also llqquueeuuee.

       unbind [-f] <context> <key>
              Remove a key binding. Use tab to cycle through bound keys.

              -f
                     Don't throw an error if the binding is not known

       unmark
              Unmark all tracks (see mmaarrkk).

       update-cache [-f]
              Update track metadata cache ($XDG_CONFIG_HOME/cmus/cache). Only files with changed modification time or removed files are considered.

              -f
                     Update all files. Same as quit, rm -f $XDG_CONFIG_HOME/cmus/cache, start cmus.

       version
              Print the version information.

       view <name or 1-7>
              Switches active view.

       vol [+-]NUM[%] [[+-]NUM[%]]
              Set, increase or decrease volume.

              If you give vvooll just one argument it changes both channels.  Two values make it possible to change the left and right channel independently.

              To increase or decrease volume prefix the value with -- or ++, otherwise value is treated as absolute volume.

              Both absolute and relative values can be given as percentage units (suffixed with %%) or as internal values (hardware may have volume in range 0-31 for example).

              Default bindings:

                     common  =  :vol +10%
                     common  +  :vol +10%
                     common  -  :vol -10%
                     common  [  :vol +1% +0%
                     common  ]  :vol +0% +1%
                     common  {  :vol -1% -0%
                     common  }  :vol -0% -1%

       win-activate (eenntteerr)
              In views 1-3 start playing the selected track.  In view 5 start playing the selected track or change to the selected directory.  In view 6 activate the selected filters.
              In settings view (7) change binding or variable.

       win-add-l (aa)
              Add the currently marked or selected track(s) (views 3-4), or the currently selected file or directory (view 5) to the library.

              Analogous to ::aadddd --ll

       win-add-p (yy)
              Add the currently marked or selected track(s) (views 1-2, 4), or the currently selected file or directory (view 5) to the marked playlist.

              Analogous to ::aadddd --pp

       win-add-Q (EE)
              Prepend the currently marked or selected track(s) (views 1-3), or the currently selected file or directory (view 5) to the play queue.

              Analogous to ::aadddd --QQ

       win-add-q (ee)
              Add the currently marked or selected track(s) (views 1-3), or the currently selected file or directory (view 5) to the play queue.

              Analogous to ::aadddd --qq

       win-bottom (GG, eenndd)
              Goto bottom of the current window.

       win-down [NUM] (jj, ddoowwnn)
              Goto down NUM (default 1) rows in the current window.

       win-half-page-down (^^DD)
              Goto down half a page in the current window.

       win-half-page-up (^^UU)
              Goto up half a page in the current window.

       win-mv-after (pp)
              If no tracks are marked, move the selected track down one row. If any tracks are marked, move the marked tracks after the currently selected track.  This command works in
              unsorted playlist and play queue view.

       win-mv-before (PP)
              If no tracks are marked, move the selected track up one row. If any tracks are marked, move the marked tracks before the currently selected track.  This command works in
              unsorted playlist and play queue view.

       win-next (ttaabb)
              Activate next window.  Only relevant in view 1.

       win-page-bottom
              Goto the bottom of the visible part of the current window.

       win-page-down (^^FF, ppaaggee__ddoowwnn)
              Goto down one page in the current window.

       win-page-middle
              Goto the middle of the visible part of the current window.

       win-page-top
              Goto the top of the visible part of the current window.

       win-page-up (^^BB, ppaaggee__uupp)
              Go up one page in the current window.

       win-remove (DD, ddeelleettee)
              Remove the selected entry.  For tracks no confirmations are made.  For playlists (view 3), files (view 5), filters (view 6) and bindings (view 7) user has to confirm the
              action.

       win-scroll-down (^^EE)
              Scroll current window one row downwards.

       win-scroll-up (^^YY)
              Scroll current window one row upwards.

       win-sel-cur (ii)
              Select the current track (position in library or playlist, not necessarily same as the currently playing track).  Works only in views 1-3, does nothing in other views.

       win-toggle (ssppaaccee)
              Expand albums in library view (1), mark tracks in views 2-4, set the marked playlist in view 3, toggle selection of a filter in view 6, toggle variable value in view 7.

       win-top (gg, hhoommee)
              Goto top of the current window.

       win-up [NUM] (kk, uupp)
              Goto up NUM (default 1) rows in the current window.

       win-update (uu)
              Checks the modification time of the files in the library, and updates metadata for changed files.  Removes non-existent files from the library.

              Reloads contents of directory in the browser view.

              Only works in views 1-2 and 5, does nothing in other views.

       win-update-cache [-f]
              Same as uuppddaattee--ccaacchhee, but only for marked / selected tracks. Only works in views 1-2, does nothing in other views.

CCOONNFFIIGGUURRAATTIIOONN OOPPTTIIOONNSS
       This section describes cmus' options that can be altered with the sseett and ttooggggllee commands. Default values are in parenthesis, possible values in brackets.

       auto_expand_albums_follow, auto_expand_albums_search, auto_expand_albums_selcur (true)
              If enabled, cmus will always open an artist and select the album when following the currently played track or performing actions such as "search" or "go to current track".
              This option is tightly coupled to the show_all_tracks option. Any "auto_expand_albums_* = false" implies "show_all_tracks = true".

       auto_reshuffle (true)
              Reshuffle playlist when end of shuffle list is reached.

       aaa_mode (all) [all, artist, album]
              Defines what tracks should be played in the library view.  Not used in the other views. For example if set to aarrttiisstt the player behaves like there were only the files of
              the currently playing artist in the library.

       altformat_current [_F_o_r_m_a_t _S_t_r_i_n_g]
              Alternative format string for the line displaying currently playing track.

              NOTE: if empty, ffoorrmmaatt__ccuurrrreenntt is used instead.

       altformat_playlist [_F_o_r_m_a_t _S_t_r_i_n_g]
              Alternative format string for the list views (2-4).

              NOTE: if empty, ffoorrmmaatt__ppllaayylliisstt is used instead.

       altformat_title [_F_o_r_m_a_t _S_t_r_i_n_g]
              Alternative format string for terminal title.

              NOTE: not all terminals support changing window title.

              NOTE: if empty, ffoorrmmaatt__ttiittllee is used instead.

       altformat_trackwin [_F_o_r_m_a_t _S_t_r_i_n_g]
              Alternative format string for the tree view's (1) track window.

              NOTE: if empty, ffoorrmmaatt__ttrraacckkwwiinn is used instead.

       buffer_seconds (10) [1-300]
              Size of player buffer in seconds.

       color_cmdline_bg (default) [_C_o_l_o_r]
              Command line background color.

       color_cmdline_fg (default) [_C_o_l_o_r]
              Command line foreground color.

       color_cmdline_attr (default) [_A_t_t_r_i_b_u_t_e_s]
              Command line attributes.

       color_error (lightred) [_C_o_l_o_r]
              Color of error messages displayed on the command line.

       color_info (lightyellow) [_C_o_l_o_r]
              Color of informational messages displayed on the command line.

       color_separator (blue) [_C_o_l_o_r]
              Color of the separator line between windows in view (1).

       color_statusline_bg (gray) [_C_o_l_o_r]
              Status line background color.

       color_statusline_fg (black) [_C_o_l_o_r]
              Status line foreground color.

       color_statusline_attr (default) [_A_t_t_r_i_b_u_t_e_s]
              Status line attributes.

       color_titleline_bg (blue) [_C_o_l_o_r]
              Background color of the line displaying currently playing track.

       color_titleline_fg (white) [_C_o_l_o_r]
              Foreground color of the line displaying currently playing track.

       color_titleline_attr (default) [_A_t_t_r_i_b_u_t_e_s]
              Attributes of the line displaying currently playing track.

       color_win_bg (default) [_C_o_l_o_r]
              Window background color.

       color_win_cur (lightyellow) [_C_o_l_o_r]
              Color of currently playing track.

       color_win_cur_attr (default) [_A_t_t_r_i_b_u_t_e_s]
              Currently playing track attributes.

       color_win_cur_sel_bg (blue) [_C_o_l_o_r]
              Background color of the selected row which is also the currently playing track in active window.

       color_win_cur_sel_fg (lightyellow) [_C_o_l_o_r]
              Foreground color of the selected row which is also the currently playing track in active window.

       color_win_cur_sel_attr (default) [_A_t_t_r_i_b_u_t_e_s]
              Attributes of the selected row which is also the currently playing track in active window.

       color_win_dir (lightblue) [_C_o_l_o_r]
              Color of directories in browser.

       color_win_fg (default) [_C_o_l_o_r]
              Window foreground color.

       color_win_attr (default) [_A_t_t_r_i_b_u_t_e_s]
              Window attributes.

       color_win_inactive_cur_sel_bg (gray) [_C_o_l_o_r]
              Background color of the selected row which is also the currently playing track in inactive window.

       color_win_inactive_cur_sel_fg (lightyellow) [_C_o_l_o_r]
              Foreground color of the selected row which is also the currently playing track in inactive window.

       color_win_inactive_cur_sel_attr (default) [_A_t_t_r_i_b_u_t_e_s]
              Attributes of the selected row which is also the currently playing track in inactive window.

       color_win_inactive_sel_bg (gray) [_C_o_l_o_r]
              Background color of selected row in inactive window.

       color_win_inactive_sel_fg (black) [_C_o_l_o_r]
              Foreground color of selected row in inactive window.

       color_win_inactive_sel_attr (default) [_A_t_t_r_i_b_u_t_e_s]
              Attributes of selected row in inactive window.

       color_win_sel_bg (blue) [_C_o_l_o_r]
              Background color of selected row in active window.

       color_win_sel_fg (white) [_C_o_l_o_r]
              Foreground color of selected row in active window.

       color_win_sel_attr (default) [_A_t_t_r_i_b_u_t_e_s]
              Attributes of selected row in active window.

       color_win_title_bg (blue) [_C_o_l_o_r]
              Background color of window titles (topmost line of the screen).

       color_win_title_fg (white) [_C_o_l_o_r]
              Foreground color of window titles (topmost line of the screen).

       color_win_title_attr (default) [_A_t_t_r_i_b_u_t_e_s]
              Attributes of window titles (topmost line of the screen).

       color_trackwin_album_bg (default) [_C_o_l_o_r]
              Background color of the album row shown in the track window.

       color_trackwin_album_fg (default) [_C_o_l_o_r]
              Foreground color of the album row shown in the track window.

       color_trackwin_album_attr (bold) [_A_t_t_r_i_b_u_t_e_s]
              Attributes of the album row shown in the track window.

       confirm_run (true)
              Ask for confirmation before executing ::rruunn

       continue (true)
              Continue playing after current track finishes.

       device (/dev/cdrom)
              CDDA device file.

       display_artist_sort_name (false)
              If enabled, always displays artist names used for sorting instead of regular ones in tree view (e.g. "Artist, The" instead of "The Artist"), so that artists column looks
              alphabetically sorted.

       follow (false)
              If enabled, always select the currently playing track on track change.

       format_current [_F_o_r_m_a_t _S_t_r_i_n_g]
              Format string for the line displaying currently playing track.

       format_playlist [_F_o_r_m_a_t _S_t_r_i_n_g]
              Format string for the list views (2-4).

       format_playlist_va [_F_o_r_m_a_t _S_t_r_i_n_g]
              Format string for the list views (2-4), if a track is assumed to be a part of compilation (see _L_I_B_R_A_R_Y _V_I_E_W _S_O_R_T_I_N_G for details).

              NOTE: if empty, ffoorrmmaatt__ppllaayylliisstt is used instead.

       format_statusline [_F_o_r_m_a_t _S_t_r_i_n_g]
              Format string for status line.

       format_title [_F_o_r_m_a_t _S_t_r_i_n_g]
              Format string for terminal title.

              NOTE: not all terminals support changing window title.

       format_trackwin [_F_o_r_m_a_t _S_t_r_i_n_g]
              Format string for the tree view's (1) track window.

       format_trackwin_album [_F_o_r_m_a_t _S_t_r_i_n_g]
              Format string for albums in tree view's (1) track window.

       format_trackwin_va [_F_o_r_m_a_t _S_t_r_i_n_g]
              Format string for the tree view's (1) track window, if a track is assumed to be a part of compilation (see _L_I_B_R_A_R_Y _V_I_E_W _S_O_R_T_I_N_G for details).

              NOTE: if empty, ffoorrmmaatt__ttrraacckkwwiinn is used instead.

       format_treewin [_F_o_r_m_a_t _S_t_r_i_n_g]
              Format string for the tree view's (1) tree window.

       format_treewin_artist [_F_o_r_m_a_t _S_t_r_i_n_g]
              Format string for artists in tree view's (1) tree window.

       smart_artist_sort (true)
              If enabled, makes tree view sorting ignore "The" in front of artist names, preventing artists starting with "The" from clumping together. Real _a_r_t_i_s_t_s_o_r_t tags override this
              option, if present.

       id3_default_charset (ISO-8859-1)
              Default character set to use for ID3v1 and broken ID3v2 tags.

              NOTE:  This is used only if the tag is not valid UTF-8.

       icecast_default_charset (ISO-8859-1)
              Default character set to use for non-UTF-8 icecast stream metadata.

              NOTE:  This is used only if the metadata is not valid UTF-8.

       lib_add_filter (_F_i_l_t_e_r)
              Apply filter when adding files to the library. See FFIILLTTEERRSS.

       lib_sort (artist album discnumber tracknumber title filename) [_S_o_r_t _K_e_y_s]
              Sort keys for the sorted library view (2).

       mouse (false)
              Enable mouse support.

              NOTE: Mouse wheel scrolling can lag if cmus is compiled with old version of Ncurses.

       mpris (true)
              Enable MPRIS support. See DD--BBuuss IInntteerrffaaccee ((MMPPRRIISS))

              NOTE: This flag has no effect if cmus was compiled without MPRIS support.

       output_plugin [roar, pulse, alsa, arts, oss, sndio, sun, coreaudio]
              Name of output plugin.

       pl_sort () [_S_o_r_t _K_e_y_s]
              Sort keys for the playlist view (3).  Empty value disables sorting and enables manually moving tracks.

       play_library (true)
              Play tracks from the library instead of playlist.

       play_sorted (false)
              Play tracks from the library in the sorted view (2) order instead of tree view (1) order.  Used only when play_library is true.

       repeat (false)
              Repeat after all tracks played.

       repeat_current (false)
              Repeat current track forever.

       replaygain (disabled)
              Enable Replay Gain. Default is "disabled". Set to "track", "album", "track-preferred" or "album-preferred".

       replaygain_limit (true)
              Use replay gain limiting when clipping.

       replaygain_preamp (0.0)
              Replay gain preamplification in decibels.

       resume (false)
              Resume playback on startup.

       rewind_offset (5) [-1-9999]
              If the position of the current track is smaller than rewind_offset, player_prev jumps to the previous track. Otherwise, player_prev jumps to the beginning of the current
              track. If rewind_offset=-1, player_prev always jumps to the previous track.

       scroll_offset (2) [0-9999]
              Minimal number of screen lines to keep above and below the cursor.

       show_all_tracks (true)
              Display all tracks of the artist when the artist is selected in the tree view. This option is tightly coupled to the auto_expand_albums_* options. "show_all_tracks = false"
              implies "auto_expand_albums_* = true".

       show_hidden (false)
              Display hidden files in browser.

       show_current_bitrate (false)
              Display current bitrate in the status lines.

       show_playback_position (true)
              Display elapsed (or remaining) time in the status line. Can be disabled to e.g. not trigger tmux's activity monitor.

       show_remaining_time (false)
              Display remaining time instead of elapsed time.

       shuffle (false)
              Play in shuffled order.  Shuffle works in the library views (1-2) and playlist view (3).

       skip_track_info (false)
              Don't load metadata when adding tracks. Useful when using network file system and having huge amount of files. Tags can be loaded using 'update-cache' or 'win-update-cache'
              commands.

       softvol (false)
              Use software volume control.

              NOTE: You should probably set this to false when using aaoo as oouuttppuutt__pplluuggiinn to output to wav files.

       softvol_state (100 100)
              Used to save left and right channel values for software volume control.  Two integers in range 0..100 separated by a space.  This option is not usually changed directly
              since vvooll command does same thing if ssooffttvvooll is true.

       start_view (tree) [tree, sorted, playlist, queue, browser, filters, settings]
              Specify the view that gets shown when cmus starts.

       status_display_program () [command]
              This command, if not empty, is run every time cmus' status changes. It can be used to display currently playing track on desktop background or panel for example.  See
              _/_u_s_r_/_s_h_a_r_e_/_d_o_c_/_c_m_u_s_/_e_x_a_m_p_l_e_s_/_c_m_u_s_-_s_t_a_t_u_s_-_d_i_s_p_l_a_y.

       time_show_leading_zero (true)
              Pad durations of less than 10 minutes with a leading 0

       wrap_search (true)
              Controls whether the search wraps around the end.

   CCoolloorrss
       Color is integer in range -1..255.

       The following color names are recognized:

       Terminal's default color, -1
              default

       Fg & bg, 0..7
              black, red, green, yellow, blue, magenta, cyan, gray

       Fg, 8..15
              darkgray, lightred, lightgreen, lightyellow, lightblue, lightmagenta, lightcyan, white

   AAttttrriibbuutteess
       Attributes is a set of names "standout|bold":

       _d_e_f_a_u_l_t does nothing, if you put it with other attributes the other attributes will be used.

       _s_t_a_n_d_o_u_t makes the text standout.

       _b_o_l_d makes the text bold.

       _r_e_v_e_r_s_e reverses the text colors.

       _u_n_d_e_r_l_i_n_e underlines the text.

       _b_l_i_n_k makes the text blink.

   FFoorrmmaatt SSttrriinnggss
       Format strings control display of tracks in library, playlist and play queue views.

       NOTE: aallttffoorrmmaatt__** options are used when there are no tags available.

       Special Keys:

              %a  %{artist}
              %A  %{albumartist}
              %l  %{album}
              %D  %{discnumber}
              %n  %{tracknumber}
              %X  %{play_count}
              %t  %{title}
              %g  %{genre}
              %c  %{comment}
              %y  %{date}
              %d  %{duration}
              %f  %{path}
              %F  %{filename}
                  %{albumduration}
                  %{originaldate}
                  %{maxdate}
                  %{bpm}
                  %{bitrate}
                  %{codec}
                  %{codec_profile}
                  %{rg_track_gain}
                  %{rg_track_peak}
                  %{rg_album_gain}
                  %{rg_album_peak}
                  %{arranger}
                  %{composer}
                  %{conductor}
                  %{lyricist}
                  %{performer}
                  %{remixer}
                  %{label}
                  %{publisher}
                  %{work}
                  %{opus}
                  %{partnumber}
                  %{part}
                  %{subtitle}
                  %{media}
              %=
                     start align right (use at most once)
              %%
                     literal %%
              %?
                     literal ??

       You can use printf style formatting (width, alignment, padding). As an extension, the width can have a %-suffix, to specify a percentage of the terminal width.
       To see current value of an option type ::sseett ooppttiioonn==<<TTAABB>>.

       Note: With %{bitrate}, you'll have to append the unit yourself, as mentioned in the example below.

       You can use conditional operator %%{{??CCOONNDDIITTIIOONN??AA[[??BB]]}}. CONDITION has the same syntax as _f_i_l_t_e_r_s, except for unsupported short and simple expressions and supported keys comparison
       (e.g. artist=albumartist). Its keys are:
              format strings' special keys
              configuration options
              keyword ssttrreeaamm [boolean] (returns true if track is a stream)
              keyword vvaa [boolean] (returns true if track's album is compilation)
       Else part can be skipped. A and B can contain string literals in "" or ''. A and B can be empty.

       Examples:

              :set format_trackwin= %02n. %t %{?y?(%y)}%= %d
              :set format_current= %n. %-30t %40F (%y)%= %d
              :set format_current= %a - %l - %02n. %t%= %{bitrate}Kbps %g %y
              :set format_playlist= %f%= %6{rg_track_gain} dB  %8{rg_track_peak}
              :set format_playlist= %-25%a %-15%l %3n. %t%= %y %d

   SSoorrtt KKeeyyss
       Sort option (lib_sort, pl_sort) value is space separated list of the following sort keys:

              artist, album, title, tracknumber, play_count, discnumber, date, originaldate, genre, comment, albumartist, filename, filemtime, bpm, bitrate, codec, media, codec_profile,
              rg_track_gain, rg_track_peak, rg_album_gain, rg_album_peak

       Note: Adding a '-' in front of the key will sort in reverse order

PPLLUUGGIINN OOPPTTIIOONNSS
       dsp.alsa.device
              PCM device for ALSA plugin, usually "default".

       mixer.alsa.channel
              Mixer channel for ALSA Plugin, usually "pcm", "master" or "headphone". To see all possible values run "alsamixer" or "amixer".

       mixer.alsa.device
              Mixer device for ALSA plugin, usually "default".

       mixer.pulse.restore_volume
              Restore the volume at startup using PulseAudio. Otherwise, cmus sets the volume to 100%, which does not mix well with "flat volumes" feature of PA. Defaults to "1"; set to
              "0" to turn off.

       dsp.ao.buffer_size
              Buffer size, default is 16kB (but you may want to try bigger values if you experience buffer under-runs).

       dsp.ao.device_interface
              Device interface for libao plugin to request a specific playback device/sink/output.  This name will be in a format determined by the specific driver backend.

       dsp.ao.driver
              Output driver for libao plugin.  Example values: "alsa09", "esd", "irix", "oss", "sun", "aixs", "wav".

              NOTE: of the file output drivers only "wav" is supported.

       dsp.ao.wav_counter
              Counter used for making filename.  Used only if ddsspp..aaoo..ddrriivveerr is "wav".  For example if this is 1 and ddsspp..aaoo..wwaavv__ddiirr is "/home/user" then PCM data is outputted to
              "/home/user/01.wav".  This counter is incremented every time playback is stopped.

              NOTE: you probably want to set ccoonnttiinnuuee to ffaallssee (press CC), otherwise playback is not stopped between tracks and all PCM data is outputted to one wav file (useful if you
              want to join files).  Also unsetting shuffle and repeat might be good idea.

       dsp.ao.wav_dir
              Output directory for libao plugin, default is your home directory. Used only if ddsspp..aaoo..ddrriivveerr is "wav".

       dsp.coreaudio.device
              Device for Core Audio output. Leave empty for default.

       dsp.coreaudio.enable_hog_mode
              Set true to set the device to hog mode. The default value is false.

       dsp.coreaudio.sync_sample_rate
              Synchonize the device sample rate with the player, so no interpolation will be applied to the stream.

       dsp.jack.server_name
              Connect to jackd with this name. Leave empty for default.

       dsp.jack.resampling_quality
              Sets the quality of the re-sampling. 0 is low quality but fast, 1 is medium quality, 2 (default) is high quality but more CPU intensiv. This option is only available if
              cmus was compiled with libsamplerate support.

       input.cdio.cddb_url
              CDDB URL (default: freedb.freedb.org:8880). Use HTTP protocol if prefixed with "http://" (e.g.: http://freedb.musicbrainz.org:80/~cddb/cddb.cgi). Set to an empty string to
              disable CDDB lookup completely.

       input.*.priority
              Sets the priority of the input plugin. If multiple plugins can play a file, the plugin with the higher priority is chosen. If the priority is 0, the plugin is disabled.

       dsp.oss.device
              PCM device for OSS plugin, usually /dev/dsp.

       mixer.oss.channel
              Mixer channel for OSS Plugin, "pcm" or "master".

       mixer.oss.device
              Mixer device for OSS plugin, usually /dev/mixer.

       dsp.roar.server
              Address of RoarAudio server. Defaults to internal defaults. Can be UNIX, TCP/IP or DECnet address.

       dsp.roar.role [music, background_music, ...]
              Role for stream. May be used by the server to apply additional defaults.

       dsp.sun.device
              PCM device for Sun plugin, usually /dev/audio.

       mixer.sun.channel
              Mixer channel for Sun Plugin, usually "master".

       mixer.sun.device
              Mixer device for Sun plugin, usually /dev/mixer.

PPLLAAYYIINNGG AAUUDDIIOO DDIISSCCSS
       With the cdio input plugin enabled, it is possible to play Audio CDs and CD images. Just set the ddeevviiccee option to either a device file (e.g. /dev/cdrom) or an image file (e.g.
       ~/cd.cue). Then add a new track using the CDDA URL scheme, e.g.:

              :add cdda://2

       To add the whole disc, use cdda:// (without track number). This is currently only working for audio discs, not images. Adding track ranges is also possible (cdda://1-3). To add
       images without changing the device option, it is possible to include the image path in the URL, e.g.:

              :add cdda:///path/to/cd.cue/2-5

       The metadata will be read from CD-Text, and if not available, looked up from a CDDB server (see iinnppuutt..ccddiioo..ccddddbb__uurrll).

FFIILLTTEERRSS
       Filters are used mostly for filtering contents of library views (1 & 2). Filters do not change the actual library content, i.e. ::ssaavvee command will still save all tracks to
       playlist file whether they are visible or not.

   TTyyppeess
       There are three types of filter expressions, each offering more expressiveness:

              ssiimmppllee _e_._g_. beatles

              sshhoorrtt  _e_._g_. ~a beatles (!~y1960-1965 | ~d>600)

              lloonngg   _e_._g_. artist="*beatles*"&album="R*"

       Simple expressions are only available using lliivvee--ffiilltteerr. For other filter commands the type is auto-detected, so both short and long expressions can be used.

       Long expressions are lists of built-in filters or user defined filters separated with && (and) or || (or).  Parenthesis can be used group subexpressions and !! negates result of the
       expression following it. Same is true for short expressions, but they can only be made of built-in filters. Also (and)-grouping is done implicitly.

   SSttrriinnggss
       long   ffiilleennaammee, aarrttiisstt, aallbbuummaarrttiisstt, aallbbuumm, ttiittllee, ggeennrree, ccoommmmeenntt, ccooddeecc, ccooddeecc__pprrooffiillee, mmeeddiiaa
              Comparators: == and !!== (not equal)

       short  ~~ff, ~~aa, ~~AA, ~~ll, ~~tt, ~~gg, ~~cc
              Comparators: none

   IInntteeggeerrss
       long   ddiissccnnuummbbeerr, ttrraacckknnuummbbeerr, ddaattee (year), oorriiggiinnaallddaattee (year), dduurraattiioonn (seconds), bbiittrraattee
              Comparators: <<, <<==, ==, >>==, >>, !!==

       short  ~~DD, ~~nn, ~~yy, ~~dd
              Comparators: <<, >>
              Ranges: aa--bb (>=a&<=b), --bb (<=b), aa-- (>=a)

   BBoooolleeaannss
       ttaagg (true if track has tags), ssttrreeaamm (true if track is a stream)
       For short expressions: ~~TT and ~~ss

   DDeeffiinniinngg FFiilltteerrss
       Filters can be defined with ffsseett command.  User defined filters appear in the filters view (6).

       Create a new filter which name is oogggg and value ffiilleennaammee==""**..oogggg""
              :fset ogg=filename="*.ogg"

       Filter ogg and mp3 files from the 90s. Note the use of user defined filter oogggg
              :fset 90s-ogg-mp3=date>=1990&date<2000&(ogg|filename="*.mp3")

   AAccttiivvaattiinngg FFiilltteerrss
       ffaaccttiivvaattee changes visible contents of the library (views 1-2).

       Activate user defined filters oogggg and mmiissssiinngg--ttaaggss
              :factivate ogg missing-tags

       Like above but negate value of oogggg filter.
              :factivate !ogg missing-tags

       Alternatively you can select the filters by pressing ssppaaccee in view 6 and then activate the selected filters by pressing eenntteerr.

   TThhrrooww--aawwaayy FFiilltteerrss
       lliivvee--ffiilltteerr and ffiilltteerr commands are useful when you want to use a filter only once and not save it.  It changes visible contents of the library (views 1-2). ffiilltteerr unactivates all
       filters in the filters view, while lliivvee--ffiilltteerr is applied in addition to all currently activated filters.

       Filter all rock (anything with rroocckk in genre tag) music from 80s-
              :filter date>=1980&genre="*rock*"
              :filter ~y1980-~grock

       Filter all artists/albums/titles containing "sleepwalking"
              :live-filter sleepwalking

   SSeelleeccttiinngg TTrraacckkss MMaattcchhiinngg aa FFiilltteerr
       Mark (select) all tracks with duration less than 2 minutes
              :mark duration<120

       Mark (select) all tracks which have been played at least once
              :mark play_count>=1

       These commands work in views 2-4.

FFIILLEESS
       cmus reads its configuration from 3 different places.

       _$_X_D_G___C_O_N_F_I_G___H_O_M_E_/_c_m_u_s_/_a_u_t_o_s_a_v_e
              This is the first file cmus loads.  cmus saves its state on exit to this file so you shouldn't edit it.

       _/_u_s_r_/_s_h_a_r_e_/_c_m_u_s_/_r_c
              If the autosave file didn't exist, this file is read instead.

       _$_X_D_G___C_O_N_F_I_G___H_O_M_E_/_c_m_u_s_/_r_c
              Static config file. This file is read immediately after the autosave file, and is never modified by cmus.  You can override auto-saved settings in this file.  This file is
              not limited to options, it can contain other commands too.

   CCoolloorr SScchheemmeess
       There are some color schemes (*.theme) in _/_u_s_r_/_s_h_a_r_e_/_c_m_u_s.  You can switch them using the ::ccoolloorrsscchheemmee command.  You can put your own color schemes to $XDG_CONFIG_HOME/cmus.

   EExxaammpplleess
       Example status display script (See ssttaattuuss__ddiissppllaayy__pprrooggrraamm option) can be found in _/_u_s_r_/_s_h_a_r_e_/_d_o_c_/_c_m_u_s_/_e_x_a_m_p_l_e_s.

EENNVVIIRROONNMMEENNTT
       CMUS_CHARSET
              Override cmus character set (default: `locale charmap`).

       CMUS_HOME
              Override cmus config directory (default: $XDG_CONFIG_HOME/cmus).

       CMUS_SOCKET
              Override cmus socket path (default: $XDG_RUNTIME_DIR/cmus-socket).

       HOME
              Full path of the user's home directory.

       http_proxy
              URI of the proxy to use for HTTP requests.

       USER
              Name of the user running cmus.

       USERNAME
              Fallback for UUSSEERR.

DD--BBuuss IInntteerrffaaccee ((MMPPRRIISS))
       cmus provides a D-Bus interface following the Media Player Remote Interfacing Specification (MPRIS) v2:
              https://www.freedesktop.org/wiki/Specifications/mpris-spec/

       It exposes the _/_o_r_g_/_m_p_r_i_s_/_M_e_d_i_a_P_l_a_y_e_r_2 object path with the interfaces _o_r_g_._m_p_r_i_s_._M_e_d_i_a_P_l_a_y_e_r_2 and _o_r_g_._m_p_r_i_s_._M_e_d_i_a_P_l_a_y_e_r_2_._P_l_a_y_e_r. The unique bus name is
       _o_r_g_._m_p_r_i_s_._M_e_d_i_a_P_l_a_y_e_r_2_._c_m_u_s.

       Metadata fields follow the naming convention of the specification:
              https://www.freedesktop.org/wiki/Specifications/mpris-spec/metadata/
       Additionally, the _c_m_u_s_:_s_t_r_e_a_m___t_i_t_l_e field is exposed if appropriate.

BBUUGGSS
       After a crash last lines of _~_/_c_m_u_s_-_d_e_b_u_g_._t_x_t might contain useful information.  The file exists only if you configured cmus with maximum debug level (..//ccoonnffiigguurree DDEEBBUUGG==22).

       Feature requests and bug reports should go to the github issue tracker:
              https://github.com/cmus/cmus/issues

SSEEEE AALLSSOO
       ccmmuuss--ttuuttoorriiaall(7), ccmmuuss--rreemmoottee(1)

AAUUTTHHOORRSS
       cmus was mainly written by Timo Hirvonen <tihirvon@gmail.com>.  Other contributers are listed in the _A_U_T_H_O_R_S file.

       This man page was written by Frank Terbeck <ft@bewatermyfriend.org>, Timo Hirvonen <tihirvon@gmail.com>, and Clay Barnes <clay.barnes@gmail.com>.

cmus                                                                                    31/01/2010                                                                                 CMUS(1)
