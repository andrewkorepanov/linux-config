# This viminfo file was generated by Vim 8.2.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~H
# Last Search Pattern:
~MSle0~/sbin

# Command Line History (newest to oldest):
:q
|2,0,1597877939,,"q"
:wq
|2,0,1597607717,,"wq"
:w
|2,0,1596930033,,"w"
:NetrwClean
|2,0,1596928846,,"NetrwClean"
:PlugUpdate
|2,0,1596928747,,"PlugUpdate"
:PlugClean
|2,0,1596928714,,"PlugClean"
:q!
|2,0,1596928391,,"q!"
:checkhealth
|2,0,1596926251,,"checkhealth"
:terminal
|2,0,1596925372,,"terminal"
:sNext
|2,0,1596924884,,"sNext"
:debuggreedy :
|2,0,1596846422,,"debuggreedy :"
:debug
|2,0,1596846394,,"debug"
:!
|2,0,1596846276,,"!"
: 
|2,0,1596845409,," "
:colorscheme
|2,0,1596845077,,"colorscheme"
:set mouse=c
|2,0,1596843533,,"set mouse=c"
:set mouse=a
|2,0,1596843454,,"set mouse=a"
:arglocal
|2,0,1596764964,,"arglocal"
:Nsource
|2,0,1596764907,,"Nsource"
:w!
|2,0,1596763565,,"w!"
::q
|2,0,1596763142,,":q"
:qw
|2,0,1596762242,,"qw"
:b1
|2,0,1596761459,,"b1"
:PlugInstall
|2,0,1596761371,,"PlugInstall"
:CocInstall
|2,0,1596761357,,"CocInstall"
:CocUpdate
|2,0,1596761344,,"CocUpdate"
:tab
|2,0,1596760954,,"tab"
:tab 1
|2,0,1596760943,,"tab 1"
:CocConfig
|2,0,1596669950,,"CocConfig"
:CocInstall coc-python
|2,0,1596669738,,"CocInstall coc-python"
:CocInstall coc-tsserver coc-json coc-html coc-css
|2,0,1596669617,,"CocInstall coc-tsserver coc-json coc-html coc-css"
:CocInfo
|2,0,1596669497,,"CocInfo"
:source ~/.vimrc
|2,0,1595981035,,"source ~/.vimrc"
:q::qЖЖж
|2,0,1595979770,,"q::qЖЖж"
:Q
|2,0,1594854288,,"Q"

# Search String History (newest to oldest):
?/sbin/modprobe nvidia
|2,1,1597607308,47,"sbin/modprobe nvidia"
?/bin/bash
|2,1,1597607308,47,"bin/bash"
?/a
|2,1,1596764862,47,"a"
?/" coc.vim
|2,1,1596762418,47,"\" coc.vim"
?/n
|2,1,1596761109,47,"n"
?/vim-plug
|2,1,1595974843,47,"vim-plug"
?/vim-
|2,1,1595974836,47,"vim-"
?/plug
|2,1,1595974772,47,"plug"
?/qqqq
|2,1,1595957341,47,"qqqq"
?/sxiv
|2,1,1595889695,47,"sxiv"
?/st 
|2,1,1595888648,47,"st "
?/title
|2,1,1595882215,47,"title"
?/monospace
|2,1,1595877808,47,"monospace"
?/ru
|2,1,1595875256,47,"ru"
?/us
|2,1,1595875239,47,"us"
?/langua
|2,1,1595875235,47,"langua"
?/locale
|2,1,1595875226,47,"locale"
?/date
|2,1,1595874868,47,"date"
?/time
|2,1,1595874845,47,"time"
?/\
|2,1,1595871941,47,"\\"
? \<feh\>
|2,1,1595871922,,"\\<feh\\>"
?/backlight
|2,1,1595036553,47,"backlight"
?/kitty
|2,1,1594946776,47,"kitty"
?/network
|2,1,1594946371,47,"network"
?/temp
|2,1,1594945320,47,"temp"
?/alsa
|2,1,1594941561,47,"alsa"
?/cpu
|2,1,1594941194,47,"cpu"
?/type
|2,1,1594857939,47,"type"
?/sh\r
|2,1,1594595864,47,"sh\\r"

# Expression History (newest to oldest):

# Input Line History (newest to oldest):
@y
|2,3,1596928727,,"y"

# Debug Line History (newest to oldest):

# Registers:
"0	LINE	0
	text/english=nvim.desktop;
	text/plain=nvim.desktop;
	text/x-makefile=nvim.desktop;
	text/x-c++hdr=nvim.desktop;
	text/x-c++src=nvim.desktop;
	text/x-chdr=nvim.desktop;
	text/x-csrc=nvim.desktop;
	text/x-java=nvim.desktop;
	text/x-moc=nvim.desktop;
	text/x-pascal=nvim.desktop;
	text/x-tcl=nvim.desktop;
	text/x-tex=nvim.desktop;
	application/x-shellscript=nvim.desktop;
	text/x-c;text/x-c++=nvim.desktop;
|3,0,0,1,14,0,1596932584,"text/english=nvim.desktop;","text/plain=nvim.desktop;","text/x-makefile=nvim.desktop;","text/x-c++hdr=nvim.desktop;","text/x-c++src=nvim.desktop;","text/x-chdr=nvim.desktop;","text/x-csrc=nvim.desktop;","text/x-java=nvim.desktop;","text/x-moc=nvim.desktop;","text/x-pascal=nvim.desktop;","text/x-tcl=nvim.desktop;","text/x-tex=nvim.desktop;","application/x-shellscript=nvim.desktop;","text/x-c;text/x-c++=nvim.desktop;"
"1	LINE	0
	f [ "$?" -eq 0 ]; then
	  # Count the number of NVIDIA controllers found.
	    NVDEVS=`lspci | grep -i NVIDIA`
	      N3D=`echo "$NVDEVS" | grep "3D controller" | wc -l`
	        NVGA=`echo "$NVDEVS" | grep "VGA compatible controller" | wc -l`
	
	          N=`expr $N3D + $NVGA - 1`
	            for i in `seq 0 $N`; do
	                    mknod -m 666 /dev/nvidia$i c 195 $i
	                      done
	
	                        mknod -m 666 /dev/nvidiactl c 195 255
	
	                    else
	                          exit 1
	                          fi
	
	                          /sbin/modprobe nvidia-uvm
	
	                          if [ "$?" -eq 0 ]; then
	                                # Find out the major device number used by the nvidia-uvm driver
	                                  D=`grep nvidia-uvm /proc/devices | awk '{print $1}'`
	
	                                    mknod -m 666 /dev/nvidia-uvm c $D 0
	                                else
	                                      exit 1
	                          fi
|3,0,1,1,27,0,1597607306,"f [ \"$?\" -eq 0 ]; then","  # Count the number of NVIDIA controllers found.","    NVDEVS=`lspci | grep -i NVIDIA`","      N3D=`echo \"$NVDEVS\" | grep \"3D controller\" | wc -l`","        NVGA=`echo \"$NVDEVS\" | grep \"VGA compatible controller\" | wc -l`","","          N=`expr $N3D + $NVGA - 1`","            for i in `seq 0 $N`; do","                    mknod -m 666 /dev/nvidia$i c 195 $i","                      done","",>63
|<"                        mknod -m 666 /dev/nvidiactl c 195 255","","                    else","                          exit 1","                          fi","","                          /sbin/modprobe nvidia-uvm","","                          if [ \"$?\" -eq 0 ]; then","                                # Find out the major device number used by the nvidia-uvm driver","                                  D=`grep nvidia-uvm /proc/devices | awk '{print $1}'`","",>73
|<"                                    mknod -m 666 /dev/nvidia-uvm c $D 0","                                else","                                      exit 1","                          fi"
"2	CHAR	0
	
	
|3,0,2,0,2,0,1596964807,"",""
"3	LINE	0
	
|3,0,3,1,1,0,1596932637,""
"4	LINE	0
	[Removed Associations]
	
	text/english=vim.desktop;
	text/plain=vim.desktop;
	text/x-makefile=vim.desktop;
	text/x-c++hdr=vim.desktop;
	text/x-c++src=vim.desktop;
	text/x-chdr=vim.desktop;
	text/x-csrc=vim.desktop;
	text/x-java=vim.desktop;
	text/x-moc=vim.desktop;
	text/x-pascal=vim.desktop;
	text/x-tcl=vim.desktop;
	text/x-tex=vim.desktop;
	application/x-shellscript=vim.desktop;
	text/x-c;text/x-c++=vim.desktop;
|3,0,4,1,16,0,1596932636,"[Removed Associations]","","text/english=vim.desktop;","text/plain=vim.desktop;","text/x-makefile=vim.desktop;","text/x-c++hdr=vim.desktop;","text/x-c++src=vim.desktop;","text/x-chdr=vim.desktop;","text/x-csrc=vim.desktop;","text/x-java=vim.desktop;","text/x-moc=vim.desktop;","text/x-pascal=vim.desktop;","text/x-tcl=vim.desktop;","text/x-tex=vim.desktop;","application/x-shellscript=vim.desktop;","text/x-c;text/x-c++=vim.desktop;"
"5	LINE	0
	Terminal=true
|3,0,5,1,1,0,1596930076,"Terminal=true"
"6	LINE	0
	Terminal=true
|3,0,6,1,1,0,1596930067,"Terminal=true"
"7	LINE	0
	
|3,0,7,1,1,0,1596928691,""
"8	LINE	0
	
|3,0,8,1,1,0,1596928686,""
"9	LINE	0
	" ---------------------------- UNSORTED ------------------------------ "
	
	" coc.vim
	" https://github.com/neoclide/coc.nvim/wiki/Install-coc.nvimv
	let g:python3_host_prog = expand('/usr/bin/python3.6')
	
	" jsonc comments highlight
	autocmd FileType json syntax match Comment +\/\/.\+$+
	
	" TextEdit might fail if hidden is not set.
	set hidden
	
	" Some servers have issues with backup files, see #649.
	set nobackup
	set nowritebackup
	
	" Give more space for displaying messages.
	set cmdheight=2
	
	" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
	" delays and poor user experience.
	set updatetime=300
	
	" Don't pass messages to |ins-completion-menu|.
	set shortmess+=c
	
	" Always show the signcolumn, otherwise it would shift the text each time
	" diagnostics appear/become resolved.
	set signcolumn=yes
	
	" Use tab for trigger completion with characters ahead and navigate.
	" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by
	" other plugin before putting this into your config.
	inoremap <silent><expr> <TAB>
	      \ pumvisible() ? "\<C-n>" :
	      \ <SID>check_back_space() ? "\<TAB>" :
	      \ coc#refresh()
	inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
	
	function! s:check_back_space() abort
	  let col = col('.') - 1
	  return !col || getline('.')[col - 1]  =~# '\s'
	endfunction
	
	" Use <c-space> to trigger completion.
	inoremap <silent><expr> <c-space> coc#refresh()
	
	" Use <cr> to confirm completion, `<C-g>u` means break undo chain at current
	" position. Coc only does snippet and additional edit on confirm.
	if has('patch8.1.1068')
	  " Use `complete_info` if your (Neo)Vim version supports it.
	  inoremap <expr> <cr> complete_info()["selected"] != "-1" ? "\<C-y>" : "\<C-g>u\<CR>"
	else
	  imap <expr> <cr> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
	endif
	
	" Use `[g` and `]g` to navigate diagnostics
	nmap <silent> [g <Plug>(coc-diagnostic-prev)
	nmap <silent> ]g <Plug>(coc-diagnostic-next)
	
	" GoTo code navigation.
	nmap <silent> gd <Plug>(coc-definition)
	nmap <silent> gy <Plug>(coc-type-definition)
	nmap <silent> gi <Plug>(coc-implementation)
	nmap <silent> gr <Plug>(coc-references)
	
	nmap <silent> rr <Plug>(coc-refactor)
	
	" Use K to show documentation in preview window.
	nnoremap <silent> K :call <SID>show_documentation()<CR>
	
	function! s:show_documentation()
	  if (index(['vim','help'], &filetype) >= 0)
	    execute 'h '.expand('<cword>')
	  else
	    call CocAction('doHover')
	  endif
	endfunction
	
	" Highlight the symbol and its references when holding the cursor.
	autocmd CursorHold * silent call CocActionAsync('highlight')
	
	" Symbol renaming.
	nmap <leader>rn <Plug>(coc-rename)
	
	" Formatting selected code.
	xmap <leader>f  <Plug>(coc-format)
	nmap <leader>f  <Plug>(coc-format)
	
	augroup mygroup
	  autocmd!
	  " Setup formatexpr specified filetype(s).
	  autocmd FileType typescript,json setl formatexpr=CocAction('formatSelected')
	  " Update signature help on jump placeholder.
	  autocmd User CocJumpPlaceholder call CocActionAsync('showSignatureHelp')
	augroup end
	
	" Applying codeAction to the selected region.
	" Example: `<leader>aap` for current paragraph
	xmap <leader>a  <Plug>(coc-codeaction-selected)
	nmap <leader>a  <Plug>(coc-codeaction-selected)
	
	" Remap keys for applying codeAction to the current line.
	nmap <leader>ac  <Plug>(coc-codeaction)
	" Apply AutoFix to problem on the current line.
	nmap <leader>qf  <Plug>(coc-fix-current)
	
	" Introduce function text object
	" NOTE: Requires 'textDocument.documentSymbol' support from the language server.
	xmap if <Plug>(coc-funcobj-i)
	xmap af <Plug>(coc-funcobj-a)
	omap if <Plug>(coc-funcobj-i)
	omap af <Plug>(coc-funcobj-a)
	
	" Use <TAB> for selections ranges.
	" NOTE: Requires 'textDocument/selectionRange' support from the language server.
	" coc-tsserver, coc-python are the examples of servers that support it.
	nmap <silent> <TAB> <Plug>(coc-range-select)
	xmap <silent> <TAB> <Plug>(coc-range-select)
	
	" Add `:Format` command to format current buffer.
	command! -nargs=0 Format :call CocAction('format')
	
	" Add `:Fold` command to fold current buffer.
	command! -nargs=? Fold :call     CocAction('fold', <f-args>)
	
	" Add `:OR` command for organize imports of the current buffer.
	command! -nargs=0 OR   :call     CocAction('runCommand', 'editor.action.organizeImport')
	
	" Add (Neo)Vim's native statusline support.
	" NOTE: Please see `:h coc-status` for integrations with external plugins that
	" provide custom statusline: lightline.vim, vim-airline.
	set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}
	
	" Mappings using CoCList:
	" Show all diagnostics.
	nnoremap <silent> <space>a  :<C-u>CocList diagnostics<cr>
	" Manage extensions.
	nnoremap <silent> <space>e  :<C-u>CocList extensions<cr>
	" Show commands.
	nnoremap <silent> <space>c  :<C-u>CocList commands<cr>
	" Find symbol of current document.
	nnoremap <silent> <space>o  :<C-u>CocList outline<cr>
	" Search workspace symbols.
	nnoremap <silent> <space>s  :<C-u>CocList -I symbols<cr>
	" Do default action for next item.
	nnoremap <silent> <space>j  :<C-u>CocNext<CR>
	" Do default action for previous item.
	nnoremap <silent> <space>k  :<C-u>CocPrev<CR>
	" Resume latest coc list.
	nnoremap <silent> <space>p  :<C-u>CocListResume<CR>
	
	
	
	" vimspector 
	let g:vimspector_enable_mappings = 'VISUAL_STUDIO'
	" Start
	"nmap <silent> <F5> <Plug>VimspectorContinue
	" Finish
	nmap <silent> <F12> :VimspectorReset<CR>
	
	nmap <silent> <F4> :VimspectorEval<CR>
	
	" Run python
	autocmd FileType python nmap <buffer> <F7> :w<CR>:AsyncRun -raw python %<CR>:copen<CR>
	autocmd FileType python imap <buffer> <F7> <esc>:w<CR>:AsyncRun -raw python %<CR>:copen<CR>
	
|3,0,9,1,167,0,1596928683,"\" ---------------------------- UNSORTED ------------------------------ \"","","\" coc.vim","\" https://github.com/neoclide/coc.nvim/wiki/Install-coc.nvimv","let g:python3_host_prog = expand('/usr/bin/python3.6')","","\" jsonc comments highlight","autocmd FileType json syntax match Comment +\\/\\/.\\+$+","","\" TextEdit might fail if hidden is not set.","set hidden","","\" Some servers have issues with backup files, see #649.",>14
|<"set nobackup","set nowritebackup","","\" Give more space for displaying messages.","set cmdheight=2","","\" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable","\" delays and poor user experience.","set updatetime=300","","\" Don't pass messages to |ins-completion-menu|.","set shortmess+=c","","\" Always show the signcolumn, otherwise it would shift the text each time","\" diagnostics appear/become resolved.","set signcolumn=yes","",>71
|<"\" Use tab for trigger completion with characters ahead and navigate.","\" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by","\" other plugin before putting this into your config.","inoremap <silent><expr> <TAB>","      \\ pumvisible() ? \"\\<C-n>\" :","      \\ <SID>check_back_space() ? \"\\<TAB>\" :","      \\ coc#refresh()","inoremap <expr><S-TAB> pumvisible() ? \"\\<C-p>\" : \"\\<C-h>\"","","function! s:check_back_space() abort","  let col = col('.') - 1",>51
|<"  return !col || getline('.')[col - 1]  =~# '\\s'","endfunction","","\" Use <c-space> to trigger completion.","inoremap <silent><expr> <c-space> coc#refresh()","","\" Use <cr> to confirm completion, `<C-g>u` means break undo chain at current","\" position. Coc only does snippet and additional edit on confirm.","if has('patch8.1.1068')","  \" Use `complete_info` if your (Neo)Vim version supports it.",>99
|<"  inoremap <expr> <cr> complete_info()[\"selected\"] != \"-1\" ? \"\\<C-y>\" : \"\\<C-g>u\\<CR>\"","else","  imap <expr> <cr> pumvisible() ? \"\\<C-y>\" : \"\\<C-g>u\\<CR>\"","endif","","\" Use `[g` and `]g` to navigate diagnostics","nmap <silent> [g <Plug>(coc-diagnostic-prev)","nmap <silent> ]g <Plug>(coc-diagnostic-next)","","\" GoTo code navigation.","nmap <silent> gd <Plug>(coc-definition)","nmap <silent> gy <Plug>(coc-type-definition)",>45
|<"nmap <silent> gi <Plug>(coc-implementation)","nmap <silent> gr <Plug>(coc-references)","","nmap <silent> rr <Plug>(coc-refactor)","","\" Use K to show documentation in preview window.","nnoremap <silent> K :call <SID>show_documentation()<CR>","","function! s:show_documentation()","  if (index(['vim','help'], &filetype) >= 0)","    execute 'h '.expand('<cword>')","  else","    call CocAction('doHover')","  endif","endfunction","",>69
|<"\" Highlight the symbol and its references when holding the cursor.","autocmd CursorHold * silent call CocActionAsync('highlight')","","\" Symbol renaming.","nmap <leader>rn <Plug>(coc-rename)","","\" Formatting selected code.","xmap <leader>f  <Plug>(coc-format)","nmap <leader>f  <Plug>(coc-format)","","augroup mygroup","  autocmd!","  \" Setup formatexpr specified filetype(s).","  autocmd FileType typescript,json setl formatexpr=CocAction('formatSelected')",>49
|<"  \" Update signature help on jump placeholder.","  autocmd User CocJumpPlaceholder call CocActionAsync('showSignatureHelp')","augroup end","","\" Applying codeAction to the selected region.","\" Example: `<leader>aap` for current paragraph","xmap <leader>a  <Plug>(coc-codeaction-selected)","nmap <leader>a  <Plug>(coc-codeaction-selected)","","\" Remap keys for applying codeAction to the current line.","nmap <leader>ac  <Plug>(coc-codeaction)",>50
|<"\" Apply AutoFix to problem on the current line.","nmap <leader>qf  <Plug>(coc-fix-current)","","\" Introduce function text object","\" NOTE: Requires 'textDocument.documentSymbol' support from the language server.","xmap if <Plug>(coc-funcobj-i)","xmap af <Plug>(coc-funcobj-a)","omap if <Plug>(coc-funcobj-i)","omap af <Plug>(coc-funcobj-a)","","\" Use <TAB> for selections ranges.","\" NOTE: Requires 'textDocument/selectionRange' support from the language server.",>74
|<"\" coc-tsserver, coc-python are the examples of servers that support it.","nmap <silent> <TAB> <Plug>(coc-range-select)","xmap <silent> <TAB> <Plug>(coc-range-select)","","\" Add `:Format` command to format current buffer.","command! -nargs=0 Format :call CocAction('format')","","\" Add `:Fold` command to fold current buffer.","command! -nargs=? Fold :call     CocAction('fold', <f-args>)","","\" Add `:OR` command for organize imports of the current buffer.",>90
|<"command! -nargs=0 OR   :call     CocAction('runCommand', 'editor.action.organizeImport')","","\" Add (Neo)Vim's native statusline support.","\" NOTE: Please see `:h coc-status` for integrations with external plugins that","\" provide custom statusline: lightline.vim, vim-airline.","set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}","","\" Mappings using CoCList:","\" Show all diagnostics.","nnoremap <silent> <space>a  :<C-u>CocList diagnostics<cr>",>23
|<"\" Manage extensions.","nnoremap <silent> <space>e  :<C-u>CocList extensions<cr>","\" Show commands.","nnoremap <silent> <space>c  :<C-u>CocList commands<cr>","\" Find symbol of current document.","nnoremap <silent> <space>o  :<C-u>CocList outline<cr>","\" Search workspace symbols.","nnoremap <silent> <space>s  :<C-u>CocList -I symbols<cr>","\" Do default action for next item.","nnoremap <silent> <space>j  :<C-u>CocNext<CR>","\" Do default action for previous item.",>47
|<"nnoremap <silent> <space>k  :<C-u>CocPrev<CR>","\" Resume latest coc list.","nnoremap <silent> <space>p  :<C-u>CocListResume<CR>","","","","\" vimspector ","let g:vimspector_enable_mappings = 'VISUAL_STUDIO'","\" Start","\"nmap <silent> <F5> <Plug>VimspectorContinue","\" Finish","nmap <silent> <F12> :VimspectorReset<CR>","","nmap <silent> <F4> :VimspectorEval<CR>","","\" Run python","autocmd FileType python nmap <buffer> <F7> :w<CR>:AsyncRun -raw python %<CR>:copen<CR>",>93
|<"autocmd FileType python imap <buffer> <F7> <esc>:w<CR>:AsyncRun -raw python %<CR>:copen<CR>",""
""-	CHAR	0
	/
|3,1,36,0,1,0,1597607710,"/"

# File marks:
'0  31  0  ~/0.sh
|4,48,31,0,1597607745,"~/0.sh"
'1  31  0  ~/0.sh
|4,49,31,0,1597607717,"~/0.sh"
'2  31  1  ~/0.sh
|4,50,31,1,1597607317,"~/0.sh"
'3  31  1  ~/0.sh
|4,51,31,1,1597607317,"~/0.sh"
'4  1  27  ~/0.sh
|4,52,1,27,1597607265,"~/0.sh"
'5  27  27  ~/0.sh
|4,53,27,27,1597607265,"~/0.sh"
'6  1  27  ~/0.sh
|4,54,1,27,1597607265,"~/0.sh"
'7  27  27  ~/0.sh
|4,55,27,27,1597607265,"~/0.sh"
'8  1  27  ~/0.sh
|4,56,1,27,1597607265,"~/0.sh"
'9  27  27  ~/0.sh
|4,57,27,27,1597607265,"~/0.sh"

# Jumplist (newest first):
-'  31  0  ~/0.sh
|4,39,31,0,1597607745,"~/0.sh"
-'  31  0  ~/0.sh
|4,39,31,0,1597607745,"~/0.sh"
-'  31  0  ~/0.sh
|4,39,31,0,1597607717,"~/0.sh"
-'  31  0  ~/0.sh
|4,39,31,0,1597607717,"~/0.sh"
-'  31  1  ~/0.sh
|4,39,31,1,1597607317,"~/0.sh"
-'  31  1  ~/0.sh
|4,39,31,1,1597607317,"~/0.sh"
-'  1  27  ~/0.sh
|4,39,1,27,1597607311,"~/0.sh"
-'  1  27  ~/0.sh
|4,39,1,27,1597607311,"~/0.sh"
-'  1  27  ~/0.sh
|4,39,1,27,1597607311,"~/0.sh"
-'  1  27  ~/0.sh
|4,39,1,27,1597607311,"~/0.sh"
-'  1  27  ~/0.sh
|4,39,1,27,1597607311,"~/0.sh"
-'  1  27  ~/0.sh
|4,39,1,27,1597607311,"~/0.sh"
-'  27  27  ~/0.sh
|4,39,27,27,1597607265,"~/0.sh"
-'  27  27  ~/0.sh
|4,39,27,27,1597607265,"~/0.sh"
-'  27  27  ~/0.sh
|4,39,27,27,1597607265,"~/0.sh"
-'  27  27  ~/0.sh
|4,39,27,27,1597607265,"~/0.sh"
-'  27  27  ~/0.sh
|4,39,27,27,1597607265,"~/0.sh"
-'  27  27  ~/0.sh
|4,39,27,27,1597607265,"~/0.sh"
-'  1  0  ~/0.sh
|4,39,1,0,1597607253,"~/0.sh"
-'  1  0  ~/0.sh
|4,39,1,0,1597607253,"~/0.sh"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  30  0  ~/.config/mimeapps.list
|4,39,30,0,1596932640,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"
-'  31  0  ~/.config/mimeapps.list
|4,39,31,0,1596932628,"~/.config/mimeapps.list"

# History of marks within files (newest to oldest):

> ~/0.sh
	*	1597607743	0
	"	31	0
	^	31	2
	.	3	0
	+	1	22
	+	1	11
	+	31	0
	+	22	0
	+	3	0

> ~/.config/mimeapps.list
	*	1596932638	0
	"	30	0
	.	31	0
	+	4	13
	+	5	11
	+	6	16
	+	7	14
	+	8	14
	+	9	12
	+	10	12
	+	11	12
	+	12	11
	+	14	11
	+	13	14
	+	15	11
	+	17	20
	+	16	26
	+	31	22
	+	31	13
	+	31	11
	+	31	16
	+	31	14
	+	31	12
	+	31	11
	+	31	14
	+	31	11
	+	31	26
	+	31	0

> ~/.local/share/recently-used.xbel
	*	1596932254	0
	"	1	0

> ~/.local/share/applications/nvim.desktop
	*	1596932055	0
	"	73	0
	^	74	19
	.	74	18
	+	74	17
	+	75	0
	+	74	18

> ~/.local/share/applications/vim.desktop
	*	1596932001	0
	"	98	0
	^	98	19
	.	98	18
	+	98	18

> ~/work/test.py
	*	1596930430	0
	"	18	8
	^	15	4
	.	15	4
	+	17	27
	+	19	4
	+	20	21
	+	22	60
	+	22	0
	+	7	0
	+	22	56
	+	22	0
	+	8	7
	+	9	7
	+	11	7
	+	12	7
	+	14	7
	+	15	7
	+	17	7
	+	18	7
	+	20	7
	+	21	8
	+	22	3
	+	23	0
	+	22	9
	+	18	7
	+	16	0
	+	15	0
	+	23	20
	+	24	0
	+	25	0
	+	26	0
	+	27	0
	+	28	0
	+	29	0
	+	30	0
	+	31	0
	+	32	0
	+	33	0
	+	34	0
	+	35	0
	+	36	0
	+	37	0
	+	38	0
	+	39	0
	+	40	0
	+	41	0
	+	42	0
	+	43	0
	+	44	0
	+	45	0
	+	46	0
	+	47	0
	+	48	0
	+	49	0
	+	50	0
	+	51	0
	+	52	0
	+	53	0
	+	54	0
	+	55	0
	+	56	0
	+	57	0
	+	58	0
	+	59	0
	+	60	0
	+	61	0
	+	62	0
	+	63	0
	+	64	0
	+	65	0
	+	66	0
	+	67	0
	+	68	0
	+	69	0
	+	70	0
	+	71	0
	+	72	0
	+	73	0
	+	74	0
	+	75	0
	+	76	0
	+	77	0
	+	78	0
	+	79	0
	+	80	0
	+	81	0
	+	82	0
	+	83	0
	+	84	0
	+	85	0
	+	86	0
	+	87	0
	+	88	0
	+	90	1
	+	92	1
	+	93	1
	+	94	1
	+	95	1
	+	96	1
	+	97	1
	+	22	0
	+	23	0
	+	15	4

> ~/.local/share/applications/sxiv.desktop
	*	1596930358	0
	"	1	0

> ~/.bashrc
	*	1596930138	0
	"	1	0

> ~/.gitconfig
	*	1596929324	0
	"	1	0

> ~/.vimrc
	*	1596928754	0
	"	109	0
	^	68	0
	.	110	0
	+	110	10
	+	110	43
	+	110	78
	+	110	46
	+	110	74
	+	110	11
	+	110	45
	+	110	46
	+	110	47
	+	110	57
	+	110	39
	+	110	47
	+	110	40
	+	110	32
	+	110	80
	+	110	29
	+	110	34
	+	110	80
	+	110	71
	+	110	44
	+	110	49
	+	110	50
	+	110	45
	+	110	60
	+	110	63
	+	110	88
	+	110	43
	+	110	78
	+	110	56
	+	110	67
	+	110	25
	+	110	23
	+	110	57
	+	110	20
	+	110	56
	+	110	16
	+	110	54
	+	110	34
	+	110	53
	+	110	27
	+	110	56
	+	110	34
	+	110	45
	+	110	38
	+	110	45
	+	110	25
	+	110	51
	+	110	13
	+	110	50
	+	110	7
	+	110	44
	+	110	8
	+	110	40
	+	110	0
	+	110	38
	+	110	12
	+	110	86
	+	110	91
	+	110	0
	+	23	0
	+	51	0
	+	52	15
	+	51	0
	+	110	91
	+	110	0
	+	47	0
	+	77	26
	+	77	31
	+	77	0
	+	39	17
	+	39	27
	+	39	0
	+	9	5
	+	9	25
	+	9	33
	+	9	0
	+	12	0
	+	49	11
	+	51	0
	+	52	11
	+	52	0
	+	49	3
	+	53	0
	+	14	17
	+	14	15
	+	14	0
	+	28	17
	+	28	0
	+	66	25
	+	47	26
	+	37	0
	+	66	0
	+	67	0
	+	9	0
	+	110	0
	e	26	0
	o	52	0

> ~/install/.config/nvim/init.vim
	*	1596846394	0
	"	1	0

> ~/.config/nvim/init.vim
	*	1596764166	0
	"	1	0

> ~/.config/nvim/coc-settings.json
	*	1596764103	0
	"	6	52
	^	6	53
	.	6	52
	+	6	52

> /etc/portage/package.use/neovim
	*	1596763566	0
	"	1	0
	.	1	0
	+	1	0

> ~/install/linux-config/.config/nvim/init.vim
	*	1596762194	0
	"	234	0
	^	240	1
	.	240	0
	+	124	0
	+	240	0

> ~/install/linux-config/.config/nvim/support
	*	1596761455	0
	"	1	0

> ~/support
	*	1596761421	0
	"	1	0

> ~/NERD_tree_1
	*	1596761120	0
	"	6	0
	.	1	0
	+	1	0

> ~/install/var/lib/portage/world
	*	1596759262	0
	"	1	0

> ~/.vim/coc-settings.json
	*	1596758843	0
	"	5	4
	^	5	43
	.	5	43
	+	6	79
	+	4	0
	+	6	0
	+	4	0
	+	6	0
	+	4	41
	+	5	43
